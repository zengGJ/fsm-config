
spring:
  profiles:
    include: dev
  cloud:
    config:
      override-none: false
      
      
  redis:
    redisson:
      enabled: false
      server-mode: cluster_servers
#      server-mode: single_server
      codec-type: org.redisson.codec.JsonJacksonCodec #org.redisson.codec.FstCodec
      common-config:
        idle-connection-timeout: 60000
        connect-timeout: 60000
        timeout: 30000
        ping-timeout: 5000
        retry-attempts: 3
        retry-interval: 1500
        password: redisdev.123QWE
        clientName: ${spring.application.name}-redisson
        subscriptions-per-connection: 2
      common-cluster-config:
        master-connection-minimum-idle-size: 2
        master-connection-pool-size: 8
        slave-connection-minimum-idle-size: 2
        slave-connection-pool-size: 8
        subscription-connection-minimum-idle-size: 1
        subscription-connection-pool-size: 8
        failed-slave-reconnection-interval: 3000
        failed-slave-check-interval: 3
        read-mode: slave
        subscription-mode: master
      cluster-servers-config:
        scan-interval: 1000
        node-addresses:
          - redis://redis1.dev.harsons.cn:7379
          - redis://redis2.dev.harsons.cn:7379
          - redis://redis3.dev.harsons.cn:7379
          - redis://redis4.dev.harsons.cn:7379
          - redis://redis5.dev.harsons.cn:7379
          - redis://redis6.dev.harsons.cn:7379
#          - redis://192.168.111.110:6379
#          - redis://192.168.111.111:6379
#          - redis://192.168.111.112:6379
#          - redis://192.168.111.113:6379
#          - redis://192.168.111.114:6379
#          - redis://192.168.111.115:6379

#配置单列

#redis:
#    redisson:
#      enabled: true
#      server-mode: cluster_servers
##      server-mode: single_server
#      codec-type: org.redisson.codec.JsonJacksonCodec #org.redisson.codec.FstCodec
#      common-config:
#        idle-connection-timeout: 60000
#        connect-timeout: 60000
#        timeout: 30000
#        ping-timeout: 5000
#        retry-attempts: 3
#        retry-interval: 1500
#        password: redisdev.123QWE
#        clientName: ${spring.application.name}-redisson
#        subscriptions-per-connection: 2


  jackson:
    default-property-inclusion: non-null
    date-format: yyyy-MM-dd HH:mm:ss
    deserialization:
      fail-on-unknown-properties: false

  http:
    converters:
        preferred-json-mapper: fastjson

  mvc:
    throw-exception-if-no-handler-found: true
    favicon:
      enabled: true

  resources:
    add-mappings: false

  endpoint:
    shutdown:
      enabled: true

ribbon:
  ConnectTimeout: 3000     # 请求连接的超时时间
  ReadTimeout: 10000       # 请求处理的超时时间
  MaxAutoRetries: 1        # 重试次数
  MaxAutoRetriesNextServer: 1      # 重试负载均衡其他的实例最大重试次数,不包括首次调用
  OkToRetryOnAllOperations: false  # 只会对 GET 请求进行重试
  ServerListRefreshInterval: 3000  # 缓存刷新时间


feign:
  httpclient:
    enabled: true

  hystrix:
    enabled: true


hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 30000  # 调用者执行的超时时间

eureka:
  server:
    enable-self-preservation: true
    renewal-percent-threshold: 0.45
    eviction-interval-timer-in-ms: 5000
    response-cache-update-interval-ms: 5000

  instance:
    appname: ${spring.application.name}
    hostname: ${spring.cloud.client.ip-address}
    instanceId: ${spring.application.name}-${spring.cloud.client.ip-address}-${server.port}
    health-check-url-path: ${management.endpoints.web.base-path}/health
    status-page-url-path: ${management.endpoints.web.base-path}/info
    lease-expiration-duration-in-seconds: 15
    lease-renewal-interval-in-seconds: 5

  client:
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 5
    serviceUrl:
      defaultZone: http://127.0.0.1:8761/eureka/

